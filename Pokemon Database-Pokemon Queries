SOURCE pokemon_schema_mysql.sql;

LOAD DATA INFILE '/path/to/pokemon_cleaned_for_mysql.csv'
INTO TABLE Pokemon
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;

# Top 10 Pok√©mon by Total Stats

SELECT name, total
FROM Pokemon
ORDER BY total DESC
LIMIT 10;

# Count of Pok√©mon by Type 1

SELECT type_1, COUNT(*) AS count
FROM Pokemon
GROUP BY type_1
ORDER BY count DESC;

# Average Stats by Generation

SELECT generation,
       AVG(hp) AS avg_hp,
       AVG(attack) AS avg_attack,
       AVG(defense) AS avg_defense,
       AVG(speed) AS avg_speed
FROM Pokemon
GROUP BY generation
ORDER BY generation;

# Legendary Pok√©mon Percentage

SELECT 
  (SUM(CASE WHEN legendary = TRUE THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS legendary_percentage
FROM Pokemon;

# Pok√©mon With Dual Types

SELECT COUNT(*) AS dual_type_pokemon
FROM Pokemon
WHERE type_2 <> 'None';

# Strongest Pok√©mon by Type

SELECT type_1, name, total
FROM Pokemon AS p1
WHERE total = (
    SELECT MAX(total)
    FROM Pokemon AS p2
    WHERE p1.type_1 = p2.type_1
)
ORDER BY total DESC;

# ER Diagram

Pokemon Table
-------------
| id          | INT (PK)      |
| name        | VARCHAR       |
| type_1      | VARCHAR       |
| type_2      | VARCHAR       |
| total       | INT           |
| hp          | INT           |
| attack      | INT           |
| defense     | INT           |
| sp_atk      | INT           |
| sp_def      | INT           |
| speed       | INT           |
| generation  | INT           |
| legendary   | BOOLEAN       |

## README ##

# üê¨ MySQL Project: Pok√©mon Data Analysis

This project uses MySQL to store and analyze a cleaned dataset of Pok√©mon stats. It demonstrates data loading, schema creation, and common analytics queries using SQL.

## üìÅ Project Files
- `pokemon_schema_mysql.sql` ‚Äî SQL script to create the database and table
- `pokemon_cleaned_for_mysql.csv` ‚Äî Cleaned data for import
- `pokemon_queries.sql` ‚Äî Sample SQL queries for analysis

## üóÉÔ∏è Table Schema

| Column      | Type      | Description                 |
|-------------|-----------|-----------------------------|
| id          | INT       | Primary key, Pok√©mon ID     |
| name        | VARCHAR   | Pok√©mon name                |
| type_1      | VARCHAR   | Primary type                |
| type_2      | VARCHAR   | Secondary type (if any)     |
| total       | INT       | Overall stat total          |
| hp          | INT       | Hit Points                  |
| attack      | INT       | Physical attack stat        |
| defense     | INT       | Physical defense stat       |
| sp_atk      | INT       | Special attack stat         |
| sp_def      | INT       | Special defense stat        |
| speed       | INT       | Speed stat                  |
| generation  | INT       | Generation released         |
| legendary   | BOOLEAN   | Whether it's Legendary      |

## üìä Sample SQL Queries

- Top 10 strongest Pok√©mon
- Average stats by generation
- Pok√©mon type distribution
- Legendary Pok√©mon breakdown

## üí° Why MySQL?

This project demonstrates:
- Relational data storage
- Querying large structured datasets
- Real-world applications of aggregation, filtering, and analytics using SQL

---

üìå Load the data, run some queries, and explore the insights hidden in your favorite Pok√©mon!
